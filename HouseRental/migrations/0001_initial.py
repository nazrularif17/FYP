# Generated by Django 4.2.1 on 2023-06-26 15:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('ownID', models.AutoField(primary_key=True, serialize=False)),
                ('ownName', models.TextField(max_length=50)),
                ('ownPhoneNo', models.CharField(max_length=12)),
                ('ownEmail', models.EmailField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('customID', models.CharField(max_length=15, unique=True)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('student', 'Student')], default='student', max_length=10)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('adminName', models.CharField(max_length=50)),
                ('adminEmail', models.EmailField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('studentName', models.CharField(max_length=50)),
                ('studentPhoneNo', models.CharField(max_length=12)),
                ('studentEmail', models.EmailField(max_length=255)),
                ('studentGender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6)),
                ('residentialStatus', models.CharField(choices=[('Resident', 'Resident'), ('Non-resident', 'Non-resident')], max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('propID', models.AutoField(primary_key=True, serialize=False)),
                ('propImg', models.ImageField(upload_to='images/property')),
                ('propTitle', models.CharField(max_length=50)),
                ('propType', models.CharField(choices=[('Bungalow', 'Bungalow'), ('Townhouse', 'Townhouse'), ('Terrace', 'Terrace'), ('Apartment', 'Apartment'), ('Condominium', 'Condominium'), ('Flat', 'Flat')], max_length=50)),
                ('propPrice', models.PositiveIntegerField()),
                ('propRange', models.PositiveIntegerField()),
                ('propAddress', models.TextField(max_length=255)),
                ('propFurnishings', models.CharField(choices=[('Fully Furnished', 'Fully Furnished'), ('Partially Furnished', 'Partially Furnished'), ('Not Furnished', 'Not Furnished')], max_length=20)),
                ('propDesc', models.TextField()),
                ('propCreateAt', models.DateField(auto_now_add=True)),
                ('propStatus', models.CharField(choices=[('Available', 'Available'), ('Rented Out', 'Rented Out')], max_length=10)),
                ('ownID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HouseRental.owner')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('roomID', models.AutoField(primary_key=True, serialize=False)),
                ('roomImg', models.ImageField(upload_to='images/room')),
                ('roomTitle', models.CharField(max_length=50)),
                ('roomType', models.CharField(choices=[('Single', 'Single'), ('Sharing', 'Sharing')], default='Single', max_length=50)),
                ('roomPrice', models.PositiveIntegerField()),
                ('roomRange', models.PositiveIntegerField()),
                ('roomAddress', models.TextField(max_length=255)),
                ('roomFurnishings', models.CharField(choices=[('Fully Furnished', 'Fully Furnished'), ('Partially Furnished', 'Partially Furnished'), ('Not Furnished', 'Not Furnished')], max_length=20)),
                ('roomDesc', models.TextField()),
                ('roomCreateAt', models.DateField(auto_now_add=True)),
                ('roomStatus', models.CharField(choices=[('Available', 'Available'), ('Rented Out', 'Rented Out')], max_length=10)),
                ('studentID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HouseRental.student')),
            ],
        ),
    ]
